
stages:
  - containerize
  - deploy

image: docker:stable


variables:
  #DOCKER_BUILDKIT: 1
  # DOCKER_DRIVER: overlay2
  # DOCKER_TLS_CERTDIR: ""
 # DOCKER_HOST: tcp://docker:2375/
  

services:
  - name: docker:20.10.16-dind
    entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]

dockerize_test:
  stage: containerize
  before_script:
    - mkdir -p /etc/docker/certs.d/registry.at.ps
    - echo ${CERT}
    - cp ${CERT} /etc/docker/certs.d/registry.at.ps/ca.crt
    - echo '10.20.15.11 registry.at.ps' >> /etc/hosts
    # - docker login registry.at.ps -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}     
    - docker info
  script:
    - wayTest=$(echo "registry.at.ps/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID" | tr '[:upper:]' '[:lower:]')
    - docker build -t $wayTest  .         
    - docker push $wayTest
    - docker rmi $wayTest
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
      when: never
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - when: on_success

dockerize_prod:
  stage: containerize
  allow_failure: false
  rules:
    - if: '$CI_COMMIT_REF_NAME != "master"'
      when: never
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - when: on_success
  image: registry-proxy.at.ps/docker:20.10
  script:
    - docker login ${REGISTRY_URL} -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}
    - wayProd=$(echo "registry.at.ps/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID" | tr '[:upper:]' '[:lower:]')
    - docker build --build-arg CI_COMMIT_TAG --build-arg CI_COMMIT_SHA -t $wayProd .
    - docker push $wayProd
    - docker rmi $wayProd
